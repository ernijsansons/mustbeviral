# Production-specific Nginx configuration
# This file extends the main nginx.conf for production deployments

# Additional rate limiting zones for production
limit_req_zone $binary_remote_addr zone=strict_api:10m rate=5r/s;
limit_req_zone $binary_remote_addr zone=uploads:10m rate=2r/s;
limit_req_zone $binary_remote_addr zone=downloads:10m rate=10r/s;

# IP whitelist for admin/monitoring endpoints
geo $admin_access {
    default 0;
    # TODO: Add your admin IP addresses
    # 192.168.1.0/24 1;
    # 10.0.0.0/8 1;
    127.0.0.1 1;
    ::1 1;
}

# Production server block for mustbeviral.com
server {
    listen 443 ssl http2;
    server_name mustbeviral.com www.mustbeviral.com;

    # Production SSL Configuration
    ssl_certificate /etc/ssl/certs/mustbeviral.crt;
    ssl_certificate_key /etc/ssl/private/mustbeviral.key;
    ssl_trusted_certificate /etc/ssl/certs/mustbeviral-ca-bundle.crt;

    # Enhanced SSL Security for Production
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:50m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # OCSP Stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 1.0.0.1 valid=300s;
    resolver_timeout 5s;

    # Enhanced Security Headers for Production
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), bluetooth=(), accelerometer=(), gyroscope=(), magnetometer=()" always;

    # Production CSP - very strict
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'strict-dynamic'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.mustbeviral.com wss://ws.mustbeviral.com; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;

    # WWW to non-WWW redirect
    if ($host = www.mustbeviral.com) {
        return 301 https://mustbeviral.com$request_uri;
    }

    # Production upstream with health checks
    location / {
        limit_req zone=general burst=50 nodelay;

        # Health check upstream
        proxy_pass http://app_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_cache_bypass $http_upgrade;

        # Production timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;

        # Error handling
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;
    }

    # API endpoints with enhanced security
    location /api/ {
        limit_req zone=strict_api burst=20 nodelay;

        # Additional security for API
        add_header X-API-Version "2.0" always;

        proxy_pass http://app_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # API-specific timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # File upload endpoints
    location /api/upload/ {
        limit_req zone=uploads burst=5 nodelay;
        client_max_body_size 50M;

        proxy_pass http://app_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Extended timeouts for uploads
        proxy_connect_timeout 10s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    # Static asset optimization
    location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";

        # Compression
        gzip_static on;

        proxy_pass http://app_backend;
        proxy_set_header Host $host;

        # Fast timeouts for static assets
        proxy_connect_timeout 2s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }

    # Restricted admin endpoints
    location /admin/ {
        if ($admin_access = 0) {
            return 403;
        }

        limit_req zone=login burst=3 nodelay;

        proxy_pass http://app_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Health check (public but rate limited)
    location = /health {
        access_log off;
        limit_req zone=general burst=10 nodelay;

        proxy_pass http://app_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;

        # Fast health check
        proxy_connect_timeout 1s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }

    # Metrics (restricted)
    location = /metrics {
        if ($admin_access = 0) {
            return 403;
        }

        access_log off;
        proxy_pass http://app_backend;
        proxy_set_header Host $host;
    }

    # Block common attack patterns
    location ~* \.(php|asp|aspx|jsp|cgi|pl)$ {
        return 444;
    }

    location ~* /\.(git|svn|hg|bzr) {
        return 444;
    }

    location ~* /(wp-admin|wp-login|wp-content|xmlrpc\.php) {
        return 444;
    }

    # Security.txt
    location = /.well-known/security.txt {
        return 200 "Contact: security@mustbeviral.com\nExpires: 2025-12-31T23:59:59.000Z\nPreferred-Languages: en\nCanonical: https://mustbeviral.com/.well-known/security.txt\n";
        add_header Content-Type text/plain;
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    location = /404.html {
        internal;
        proxy_pass http://app_backend;
    }

    location = /50x.html {
        internal;
        proxy_pass http://app_backend;
    }
}

# API subdomain
server {
    listen 443 ssl http2;
    server_name api.mustbeviral.com;

    # Use same SSL configuration
    ssl_certificate /etc/ssl/certs/mustbeviral.crt;
    ssl_certificate_key /etc/ssl/private/mustbeviral.key;
    ssl_trusted_certificate /etc/ssl/certs/mustbeviral-ca-bundle.crt;

    include /etc/nginx/conf.d/ssl-production.conf;

    # CORS headers for API
    add_header Access-Control-Allow-Origin "https://mustbeviral.com" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
    add_header Access-Control-Max-Age "86400" always;

    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        add_header Access-Control-Allow-Origin "https://mustbeviral.com";
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
        add_header Access-Control-Max-Age "86400";
        add_header Content-Type "text/plain; charset=utf-8";
        add_header Content-Length 0;
        return 204;
    }

    # API routes
    location / {
        limit_req zone=strict_api burst=30 nodelay;

        proxy_pass http://app_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # API timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }
}